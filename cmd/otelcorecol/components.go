// Code generated by "github.com/oodle-ai/opentelemetry-collector/cmd/builder". DO NOT EDIT.

package main

import (
	"github.com/oodle-ai/opentelemetry-collector/connector"
	forwardconnector "github.com/oodle-ai/opentelemetry-collector/connector/forwardconnector"
	"github.com/oodle-ai/opentelemetry-collector/exporter"
	debugexporter "github.com/oodle-ai/opentelemetry-collector/exporter/debugexporter"
	loggingexporter "github.com/oodle-ai/opentelemetry-collector/exporter/loggingexporter"
	nopexporter "github.com/oodle-ai/opentelemetry-collector/exporter/nopexporter"
	otlpexporter "github.com/oodle-ai/opentelemetry-collector/exporter/otlpexporter"
	otlphttpexporter "github.com/oodle-ai/opentelemetry-collector/exporter/otlphttpexporter"
	"github.com/oodle-ai/opentelemetry-collector/extension"
	ballastextension "github.com/oodle-ai/opentelemetry-collector/extension/ballastextension"
	memorylimiterextension "github.com/oodle-ai/opentelemetry-collector/extension/memorylimiterextension"
	zpagesextension "github.com/oodle-ai/opentelemetry-collector/extension/zpagesextension"
	"github.com/oodle-ai/opentelemetry-collector/otelcol"
	"github.com/oodle-ai/opentelemetry-collector/processor"
	batchprocessor "github.com/oodle-ai/opentelemetry-collector/processor/batchprocessor"
	memorylimiterprocessor "github.com/oodle-ai/opentelemetry-collector/processor/memorylimiterprocessor"
	"github.com/oodle-ai/opentelemetry-collector/receiver"
	nopreceiver "github.com/oodle-ai/opentelemetry-collector/receiver/nopreceiver"
	otlpreceiver "github.com/oodle-ai/opentelemetry-collector/receiver/otlpreceiver"
)

func components() (otelcol.Factories, error) {
	var err error
	factories := otelcol.Factories{}

	factories.Extensions, err = extension.MakeFactoryMap(
		ballastextension.NewFactory(),
		memorylimiterextension.NewFactory(),
		zpagesextension.NewFactory(),
	)
	if err != nil {
		return otelcol.Factories{}, err
	}

	factories.Receivers, err = receiver.MakeFactoryMap(
		nopreceiver.NewFactory(),
		otlpreceiver.NewFactory(),
	)
	if err != nil {
		return otelcol.Factories{}, err
	}

	factories.Exporters, err = exporter.MakeFactoryMap(
		debugexporter.NewFactory(),
		loggingexporter.NewFactory(),
		nopexporter.NewFactory(),
		otlpexporter.NewFactory(),
		otlphttpexporter.NewFactory(),
	)
	if err != nil {
		return otelcol.Factories{}, err
	}

	factories.Processors, err = processor.MakeFactoryMap(
		batchprocessor.NewFactory(),
		memorylimiterprocessor.NewFactory(),
	)
	if err != nil {
		return otelcol.Factories{}, err
	}

	factories.Connectors, err = connector.MakeFactoryMap(
		forwardconnector.NewFactory(),
	)
	if err != nil {
		return otelcol.Factories{}, err
	}

	return factories, nil
}
